name: Build and Release CyberUI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./CyberUI  # Set to your mod folder

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Java 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'

    - name: Verify required files
      run: |
        if [ ! -f gradlew ]; then
          echo "ERROR: gradlew not found in CyberUI folder!"
          exit 1
        fi
        if [ ! -f build.gradle ]; then
          echo "ERROR: build.gradle not found in CyberUI folder!"
          exit 1
        fi
        echo "gradlew and build.gradle found, proceeding..."

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Build mod
      run: |
        ./gradlew build --stacktrace || { echo "Gradle build failed!"; exit 1; }

    - name: Extract mod version from build.gradle
      id: extract_version
      run: |
        VERSION=$(grep -oP 'version\s*=\s*["'\'']\K[^"'\'' ]+' build.gradle)
        if [ -z "$VERSION" ]; then
          echo "ERROR: Could not extract mod version from build.gradle"
          exit 1
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Detected mod version: $VERSION"

    - name: Rename jar for Modrinth
      run: |
        VERSION=${{ steps.extract_version.outputs.version }}
        JAR_PATH=$(find build/libs -type f -name "*.jar" | head -n 1)
        if [ -z "$JAR_PATH" ]; then
          echo "ERROR: No jar found in build/libs!"
          exit 1
        fi
        NEW_NAME="CyberUI-1.18.2-$VERSION.jar"
        mv "$JAR_PATH" "$NEW_NAME"
        echo "Jar renamed to $NEW_NAME"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: CyberUI-jar
        path: CyberUI-1.18.2-${{ steps.extract_version.outputs.version }}.jar

    - name: Create Git tag
      run: |
        VERSION=${{ steps.extract_version.outputs.version }}
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag -a "v$VERSION" -m "Release v$VERSION"
        git push origin "v$VERSION"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.extract_version.outputs.version }}
        name: CyberUI v${{ steps.extract_version.outputs.version }}
        body: "Automated build release for Forge 1.18.2"
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload jar to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: CyberUI-1.18.2-${{ steps.extract_version.outputs.version }}.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
